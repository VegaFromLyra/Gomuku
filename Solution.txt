using System;

// To execute C#, please define "static void Main" on a class
// named Solution.

class Solution {
  static void Main(string[] args) {
    
    Piece[,] input = {
                        {Piece.Empty, 
                         Piece.Player1, 
                         Piece.Player1, 
                         Piece.Player1, 
                         Piece.Player1,                         
                         Piece.Empty,
                         Piece.Player1,
                         Piece.Player2, 
                         Piece.Player2, 
                         Piece.Player2, 
                         Piece.Player2,
                         Piece.Player2}
                     };
    
    Piece winner = GetWinner(input);
    
    Console.WriteLine("Winner is {0}", winner);
    
  }
  
  enum Piece
  {
     Empty,
     Player1,
     Player2
  };

  static Piece GetWinner(Piece[,] board)
  {
     int wins = 5;

     int countOfValuesInRow = 0;
     Piece winner = Piece.Empty;
     // Check row
     for(int i = 0; i < board.GetLength(0); i++)
     {
        for(int j = 0; j < board.GetLength(1) - 1; j++)
        {
           if ((board[i, j] != Piece.Empty) &&
               (board[i, j] == board[i, j + 1])) 
           {
              winner = board[i, j];
              countOfValuesInRow++;
              
              if (countOfValuesInRow + 1 == wins)
              {
                 return winner; 
              }             
           }
           else
           {
              countOfValuesInRow = 0;   
           }
        }       
     }
    
     // Diagonal 1 - top left to bottom right
     int countOfValuesInDiagonal1 = 0;
        
 
    for(int i = 0, i < board.GetLength(0); i++)
    {
       for(int row = i, column = 0; 
           row < (board.GetLength(0) - 1) &&
           column < (board.GetLength(1) - 1); 
           row++,
           column++)
       {
           if (board[row, column] != Piece.Empty &&
               board[row, column] == board[row + 1, column + 1])
           {
              winner = board[row, column];
              countOfValuesInDiagonal1++;
             
              if (countOfValuesInDiagonal1 == wins)
              {
                 return winner;
              }              
           }
           else
           {
              countOfValuesInDiagonal1 = 0;  
           }
       }
    }
     
     return Piece.Empty; 
  }    
}
